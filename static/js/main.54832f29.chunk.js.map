{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.module.css","components/UI/Input/Input.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar.module.css","components/Order/Order.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Button/Button.module.css","components/Burger/BuildControls/BuildControls.module.css","containers/Layouts/Layout.module.css","assets/27.1 burger-logo.png.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactDetails/ContactDetail.module.css","containers/Auth/Auth.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/UI/Button/Button.js","components/Navigation/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layouts/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/Burger/OrderSummary/OrderSummary.js","axios-order.js","components/UI/Spinner/Spinner.js","containers/withErrorHandle/withErrorHandle.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burger.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactDetails/ContactDetail.js","containers/Checkout/Checkout.js","containers/Auth/Auth.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burger.js","store/reducers/order.js","store/reducers/auth.js","store/reducers/rootreducer.js","index.js"],"names":["module","exports","logo","props","className","classes","Logo","src","brandLogo","alt","navigationItem","NavigationItem","to","link","activeClassName","active","exact","children","navigationItems","NavigationItems","isAuthenticated","button","Button","btnType","join","onClick","clicked","toolbar","Toolbar","MobileOnly","toggle","DesktopOnly","isAuth","backDrop","show","Backdrop","modalclosed","sideDrawer","sidemotion","SideDrawer","Close","Open","closed","Layout","state","showSideDrawer","SideDrawerHandler","setState","ToggleHandler","prevState","Content","this","Component","connect","auth","token","BurgerIngredients","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedData","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","del_ing","disabled","More","add_ing","buildControls","BuildControls","price","toFixed","control","OrderButton","purchasable","ordered","modal","Modal","style","transform","opacity","orderSummary","ingredientSummary","textTransform","cancel","continue","instance","axios","create","baseURL","spinner","loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","auth_success","authtoken","authid","userId","authinvalidate","expiretime","dispatch","setTimeout","authlogout","localStorage","removeItem","authredirect","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirect","history","push","modalClosingHandler","continueHandler","init_Ingredients","sum","disabledInfo","ing","Spinner","OnaddIngredient","OndelIngredient","totalPrice","updatePurchaseState","OrderSummary","ingredient_type","get","then","data","catch","burgerAction","checkoutSummary","CheckoutSummary","width","margin","input","inputElement","elementType","InputElement","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactDetail","orderForm","name","placeholder","street","zipCode","country","email","deliveryMethod","loading","orderHandler","e","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","event","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","id","config","form","onSubmit","formElement","post","orderid","orderdata","purchaseburgersuccess","purchaseburgerfailure","orderaction","Checkout","replace","cancelHandler","goBack","summary","purchaseredirect","purchased","match","component","password","isSignup","updatedControl","signHandler","onsubmitHandler","OnSubmit","isbuilding","OnSetAuthRedirect","Control","auth_init_data","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","err","alert","authactions","ingkey","quantity","ingrediens_output","Ingredients","orders_output","odata","Order","parseFloat","Orders","orders","OnfetchOrders","queryParams","fetchOrder","orderfailure","Logout","dispatchh","authaction","withRouter","AutoAuthValidate","getItem","useEffect","routes","Auth","Boolean","window","location","hostname","initialState","INGREDIENTS_PRICE","salad","cheese","meat","bacon","reducer","action","neworder","rootReducer","combineReducers","burgerReducer","orderReducer","authReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.54832f29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bacon\":\"BurgerIngredients_Bacon__12gQf\",\"BreadBottom\":\"BurgerIngredients_BreadBottom__3KVAs\",\"BreadTop\":\"BurgerIngredients_BreadTop__1-1eG\",\"Seeds1\":\"BurgerIngredients_Seeds1__1bWS0\",\"Seeds2\":\"BurgerIngredients_Seeds2__1Rqas\",\"Meat\":\"BurgerIngredients_Meat__30mbD\",\"Cheese\":\"BurgerIngredients_Cheese__ng8Br\",\"Salad\":\"BurgerIngredients_Salad__2P9oz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2XmJ4\",\"Label\":\"Input_Label__9EKgb\",\"InputElement\":\"Input_InputElement__1_Z3H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__28Ds6\",\"Logo\":\"SideDrawer_Logo__3GUVn\",\"Open\":\"SideDrawer_Open__14sKz\",\"Close\":\"SideDrawer_Close__3pDVi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3Qj5m\",\"Label\":\"BuildControl_Label__zI3DP\",\"Less\":\"BuildControl_Less__38Ay2\",\"More\":\"BuildControl_More__2TM1b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__17MgU\",\"DesktopOnly\":\"Toolbar_DesktopOnly__134ew\",\"MobileOnly\":\"Toolbar_MobileOnly__1KDVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1UyXY\",\"Ingredients\":\"Order_Ingredients__3I4Qv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__t_5NA\",\"active\":\"NavigationItem_active__zQ0la\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2aq1Q\",\"Success\":\"Button_Success__1lU2E\",\"Danger\":\"Button_Danger__3aVjt\",\"Menu\":\"Button_Menu__G4Of4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__fA_EA\",\"OrderButton\":\"BuildControls_OrderButton__BwTjI\",\"enable\":\"BuildControls_enable__ccUZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3FFLl\"};","module.exports = __webpack_public_path__ + \"static/media/27.1 burger-logo.png.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__J8Nzz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3NKvo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__oG6Tm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__MTMnt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3HyAi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__1izVn\",\"load1\":\"Spinner_load1__2F0JV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1NTrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactDetail\":\"ContactDetail_ContactDetail__d4Bxf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Control\":\"Auth_Control__9Jrfn\"};","import React from 'react'\r\nimport brandLogo from '../../assets/27.1 burger-logo.png.png'\r\nimport classes from './Logo.module.css'\r\n\r\nconst logo = (props) => {\r\n  return (\r\n    <div className={classes.Logo}><img src={brandLogo} alt='logo' /></div>\r\n  )\r\n}\r\n\r\nexport default logo\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport classes from './NavigationItem.module.css'\r\nconst navigationItem = (props) => {\r\n  return (\r\n    <li className={classes.NavigationItem}><NavLink to={props.link} activeClassName={classes.active} exact={props.exact}>{props.children}</NavLink></li>\r\n  )\r\n}\r\n\r\nexport default navigationItem\r\n","import React from 'react'\r\nimport classes from './NavigationItems.module.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst navigationItems = (props) => {\r\n  return (\r\n    <ul className={classes.NavigationItems}>\r\n      <NavigationItem link='/' exact>BurgerMaker</NavigationItem>\r\n      {props.isAuthenticated ? <NavigationItem link='/orders'>Orders</NavigationItem> : null}\r\n\t  {props.isAuthenticated ? <NavigationItem link='/logout'>Logout</NavigationItem> : <NavigationItem link='/auth'>Sign</NavigationItem>}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default navigationItems\r\n","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst button = (props) => {\r\n  return (\r\n    <button className={[classes.Button,classes[props.btnType]].join(' ')} onClick={props.clicked}>{props.children}</button>\r\n  )\r\n}\r\n\r\nexport default button\r\n","import React from 'react'\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from '../Logo/Logo'\r\nimport NavigationItems from './NavigationItems/NavigationItems'\r\nimport Button from '../UI/Button/Button'\r\n\r\nconst toolbar = (props)=> {\r\n  return (\r\n    <header className={[classes.Toolbar]}>\r\n  <div className={classes.MobileOnly}>\r\n  <Button btnType='Menu' clicked={props.toggle}><i className=\"fas fa-sliders-h\"></i></Button>\r\n  </div>\r\n    <Logo />\r\n    <nav className={classes.DesktopOnly}>\r\n    <NavigationItems isAuthenticated={props.isAuth}/>\r\n    </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default toolbar\r\n","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst backDrop =(props) => props.show ? <div className={classes.Backdrop} onClick={props.modalclosed}></div>:null\r\n\r\nexport default backDrop\r\n","import React,{Fragment} from 'react'\r\nimport classes from './SideDrawer.module.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\n\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\n\r\nconst sideDrawer = (props)=> {\r\n  let sidemotion = [classes.SideDrawer,classes.Close]\r\n  if(props.show)\r\n  {\r\n    sidemotion = [classes.SideDrawer,classes.Open]\r\n  }\r\n  return (\r\n    <Fragment>\r\n    <Backdrop show={props.show} modalclosed={props.closed} />\r\n    <div className={sidemotion.join(' ')} onClick={props.closed}>\r\n    <div className={classes.Logo}><Logo /></div>\r\n    <nav>\r\n      <NavigationItems isAuthenticated={props.isAuth}/>\r\n    </nav>\r\n    </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default sideDrawer\r\n","import React,{ Component , Fragment } from 'react'\r\nimport classes from './Layout.module.css'\r\nimport Toolbar from '../../components/Navigation/Toolbar'\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Layout extends Component {\r\n  state ={\r\n    showSideDrawer:false\r\n  }\r\n\r\n  SideDrawerHandler = () =>{\r\n    this.setState({showSideDrawer:false})\r\n  }\r\n\r\n  ToggleHandler = () =>{\r\n    this.setState((prevState) =>{return{ showSideDrawer:!prevState.showSideDrawer}})\r\n  }\r\n\r\n  render(){\r\n  return (\r\n    <Fragment>\r\n        <div className={classes.Content}>\r\n        <Toolbar \r\n\t\ttoggle={this.ToggleHandler}\r\n\t\tisAuth={this.props.isAuthenticated}\r\n\t\t/>\r\n        <SideDrawer \r\n\t\tclosed={this.SideDrawerHandler} \r\n\t\tshow={this.state.showSideDrawer}\r\n\t\tisAuth={this.props.isAuthenticated}\r\n\t\t/>\r\n        </div>\r\n        <main>{this.props.children}</main>\r\n    </Fragment>\r\n  )\r\n}\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n\treturn{\r\n\t\tisAuthenticated : state.auth.token !== null\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)\r\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classes from './BurgerIngredients.module.css'\n\nexport default class BurgerIngredients extends Component {\n  render() {\n    let ingredient = null\n\n    switch(this.props.type){\n      case('bread-bottom'):\n        ingredient = <div className={classes.BreadBottom}></div>\n        break;\n\n      case('bread-top'):\n        ingredient = <div className={classes.BreadTop}>\n        <div className={classes.Seeds1}></div>\n        <div className={classes.Seeds2}></div>\n        </div>\n        break;\n\n      case('meat'):\n      ingredient = <div className={classes.Meat}></div>\n      break;\n\n      case('cheese'):\n      ingredient = <div className={classes.Cheese}></div>\n      break;\n\n      case('salad'):\n      ingredient = <div className={classes.Salad}></div>\n      break;\n\n      case('bacon'):\n      ingredient = <div className={classes.Bacon}></div>\n      break;\n      default:\n      ingredient =null\n    }\n    return ingredient\n\n  }\n}\n\nBurgerIngredients.propTypes ={\n  type : PropTypes.string.isRequired\n}\n","import React from 'react'\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients'\r\nimport classes from './Burger.module.css'\r\n\r\nconst burger = (props) => {\r\n\r\n  let transformedData = Object.keys(props.ingredients).map(igKey =>{\r\n    return [...Array(props.ingredients[igKey])].map((_,i)=>{\r\n      return <BurgerIngredients key={igKey + i} type={igKey} />\r\n    })\r\n  }).reduce((arr,el)=>{\r\n    return arr.concat(el)\r\n  },[])\r\n\r\n  if(transformedData.length === 0)\r\n  transformedData = <p>Please start adding</p>\r\n\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredients type='bread-top' />\r\n      {transformedData}\r\n      <BurgerIngredients type='bread-bottom' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default burger\r\n","import React from 'react'\r\nimport classes from './BuildControl.module.css'\r\nconst buildControl = (props) => {\r\n  return (\r\n    <div className={classes.BuildControl}>\r\n      <div className={classes.Label}>{props.label}</div>\r\n      <button className={classes.Less} onClick={props.del_ing} disabled={props.disabled}>-</button>\r\n      <button className={classes.More} onClick={props.add_ing}>+</button>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default buildControl\r\n","import React from 'react'\r\nimport classes from './BuildControls.module.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst buildControls = (props)=> {\r\n  const controls =[\r\n    {label:'Salad' ,type:'salad'},\r\n    {label:'Bacon' ,type:'bacon'},\r\n    {label:'Cheese' ,type:'cheese'},\r\n    {label:'Meat' ,type:'meat'}\r\n  ]\r\n\r\n  return (\r\n    <div className={classes.BuildControls}>\r\n    <p><strong>{props.price.toFixed(2)}</strong>  <em>Rupees</em></p>\r\n      {controls.map(control=><BuildControl key={control.label} label={control.label}\r\n       add_ing={()=>props.add_ing(control.type)} del_ing={ ()=> props.del_ing(control.type)} disabled={props.disabled[control.type]} />)}\r\n    <button\r\n      className={classes.OrderButton}\r\n      disabled={!props.purchasable}\r\n      onClick={props.ordered}>\r\n      {props.isAuth? 'ORDER NOW':'SIGNUP TO ORDER'}\r\n    </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default buildControls\r\n","import React ,{ Fragment } from 'react'\r\nimport classes from './Modal.module.css'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\nconst modal = (props)=> {\r\n  return (\r\n    <Fragment>\r\n\r\n    <div className={classes.Modal} style={{transform:props.show ? 'translateY(0)':'translateY(-100vh)',\r\n                                           opacity:props.show ? '1':'0'}}>\r\n      {props.children}\r\n    </div>\r\n    <Backdrop  show={props.show} modalclosed={props.modalclosed} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default modal\r\n","import React,{Fragment} from 'react'\r\nimport Button from '../../UI/Button/Button'\r\n\r\nconst orderSummary = (props) => {\r\n\r\n  const ingredientSummary = Object.keys(props.ingredients)\r\n                                       .map(igKey=>{\r\n                                        return <li key={igKey} ><span style={{textTransform:'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}</li>})\r\n\r\n  return (\r\n        <Fragment>\r\n            <h3>Your Order</h3>\r\n            <p>Your Delicious Burger with following:</p>\r\n            <ul>\r\n              {ingredientSummary}\r\n            </ul>\r\n            <p><strong>{props.price.toFixed(2)}</strong>  <em>Rupees</em></p>\r\n            <Button btnType='Danger' clicked={props.cancel}>Cancel</Button>\r\n            <Button btnType='Success'\r\n            clicked={props.continue}>Continue</Button>\r\n        </Fragment>\r\n  )\r\n}\r\n\r\nexport default orderSummary\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL:'https://react-burger-47284.firebaseio.com/',\r\n})\r\n\r\nexport default instance\r\n","import React from 'react'\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = (props) => {\r\n  return (\r\n  <div className={classes.loader}>Loading...</div>\r\n  )\r\n}\r\n\r\nexport default spinner\r\n","// import React,{ Component , Fragment } from 'react'\r\n// import Modal from '../../components/UI/Modal/Modal'\r\n//\r\n//\r\n// const withErrorHandler = (WrappedComponent,axios)=> {\r\n// return class extends Component {\r\n//   state ={\r\n//     error:null\r\n//   }\r\n//\r\n//   componentDidMount(){\r\n//     axios.interceptors.request.use(req =>{\r\n//             this.setState({error:null})\r\n//     })\r\n//\r\n//     axios.interceptors.response.use(null,error =>{\r\n//             this.setState({error:error})\r\n//     })\r\n//   }\r\n//\r\n//   modalHandler = () => {\r\n//     this.setState({error:null})\r\n//   }\r\n//\r\n//   render(){\r\n//     return (\r\n//     <Fragment>\r\n//     <Modal show={this.state.error} modalclosed={this.modalHandler}>{this.state.error ? this.state.error:null }</Modal>\r\n//     <WrappedComponent {...this.props} />\r\n//     </Fragment>\r\n//   )}\r\n// }\r\n// }\r\n//\r\n// export default withErrorHandler\r\n\r\n\r\nimport React, { Component ,Fragment } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = ( WrappedComponent, axios ) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render () {\r\n            return (\r\n                <Fragment>\r\n                    <Modal\r\n                        show={this.state.error}\r\n                        modalclosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;\r\n","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\n\r\nexport const auth_start = () =>{\r\n\treturn {\r\n\t\ttype:actionTypes.AUTH_START\r\n\t}\r\n}\r\n\r\nexport const auth_success = (authtoken,authid) =>{\r\n\treturn{\r\n\t\ttype:actionTypes.AUTH_SUCCESS,\r\n\t\ttoken:authtoken,\r\n\t\tuserId:authid\r\n\t}\r\n}\r\n\r\nexport const auth_failure = (error) =>{\r\n\treturn{\r\n\t\ttype:actionTypes.AUTH_FAILURE,\r\n\t\terror:error\r\n\t}\r\n}\r\n\r\nexport const authinit = (email,password,isSignup) =>{\r\n\treturn dispatch => {\r\n\t\tdispatch(auth_start())\r\n\t\tconst auth_init_data ={\r\n\t\t\temail:email,\r\n\t\t\tpassword:password,\r\n\t\t\treturnSecureToken:true\r\n\t\t}\r\n\r\n\t\tlet url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA41Hz9Gurgx5atPvLzrX0cjLdkeqVqTgQ'\r\n\t\tif(isSignup)\r\n\t\t{\r\n\t\t url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA41Hz9Gurgx5atPvLzrX0cjLdkeqVqTgQ'\r\n\t\t}\r\n\t\t\r\n\t\taxios.post(url,auth_init_data)\r\n\t\t.then(response=>{\r\n\t\tconst expirationDate = new Date(new Date().getTime() + (response.data.expiresIn * 1000))\r\n\t\tlocalStorage.setItem('token',response.data.idToken)\r\n\t\tlocalStorage.setItem('expirationDate',expirationDate)\r\n\t\tlocalStorage.setItem('userId',response.data.localId)\r\n\t\tdispatch(auth_success(response.data.idToken,response.data.localId))\r\n\t\tdispatch(authinvalidate(response.data.expiresIn))\r\n\t\t})\r\n\t\t.catch(err =>{\r\n\t\t\tconst error_in = isSignup ? 'Signup' : 'SignIn' \r\n\t\t\talert(`check your ${error_in} credentials`)\r\n\t\t\tdispatch(auth_failure(err))\r\n\t\t})\r\n\t}\r\n\r\n} \r\n\r\nexport const authinvalidate = (expiretime) =>{\r\n\t\r\n\treturn dispatch=>{\r\n\t\r\n\tsetTimeout(()=>{\r\n\tdispatch(authlogout())\r\n\t},expiretime * 1000)\r\n\t}\r\n}\r\n\r\nexport const authlogout = () =>{\r\n\tlocalStorage.removeItem('token')\r\n\tlocalStorage.removeItem('expirationDate')\r\n\tlocalStorage.removeItem('userId')\r\n\treturn{\r\n\t\ttype:actionTypes.AUTH_LOGOUT\r\n\t}\r\n}\r\n\r\nexport const authredirect = (path) =>{\r\n\treturn{\r\n\t\ttype:actionTypes.AUTH_REDIRECT_PATH,\r\n\t\tpath:path\r\n\t}\r\n}\r\n\r\nexport const checkauthstatus = () =>{\r\n\treturn dispatch=>{\r\n\tconst token = localStorage.getItem('token')\r\n\tif(!token)\r\n\t{\r\n\t\tdispatch(authlogout())\r\n\t}\r\n\telse{\r\n\t\tconst expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n\t\t\t\tif(expirationDate <= new Date())\r\n\t\t{\r\n\t\t\tdispatch(authlogout())\r\n\t\t}else{\r\n\t\t\tconst userId = localStorage.getItem('userId')\r\n\t\t\tdispatch(auth_success(token , userId))\r\n\t\t\t\r\n\t\t\tdispatch(authinvalidate((expirationDate.getTime() - new Date().getTime())/1000))\r\n\t\t}\r\n\t}\r\n\t}\r\n}","//Burger action identifiers\r\nexport const ADD_INGREDIENTS = 'ADD_INGREDIENTS'\r\nexport const DEL_INGREDIENTS = 'DEL_INGREDIENTS'\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED'\r\n\r\n//Order action identifiers\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS'\r\nexport const PURCHASE_BURGER_FAILURE = 'PURCHASE_BURGER_FAILURE'\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\r\nexport const PURCHASING = 'PURCHASING'\r\nexport const ORDER_START = 'ORDER_START'\r\nexport const ORDER_SUCCESS = 'ORDER_SUCCESS'\r\nexport const ORDER_FAILURE = 'ORDER_FAILURE'\r\n\r\n//Authentication action identifiers\r\nexport const AUTH_START = 'AUTH_START'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_FAILURE = 'AUTH_FAILURE'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\nexport const AUTH_REDIRECT_PATH = 'AUTH_REDIRECT_PATH'\r\n","import React, { Component , Fragment } from 'react'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport axios from '../../axios-order'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../withErrorHandle/withErrorHandle'\r\nimport {connect} from 'react-redux'\r\nimport * as burgerAction from '../../store/actions'\r\n\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\nstate={\r\n  purchasing:false,\r\n}\r\n\r\ncomponentDidMount(){\r\n\tthis.props.init_Ingredients()\r\n}\r\n\r\npurchaseHandler = () => {\r\nif(this.props.isAuthenticated){\r\n  this.setState({purchasing: true})\r\n  }\r\n  else{\r\n  this.props.onSetAuthRedirect('/checkout')\r\n  this.props.history.push('/auth')\r\n  }\r\n}\r\n\r\nupdatePurchaseState (ingredients) {\r\n        const sum = Object.keys( ingredients )\r\n            .map( igKey => {\r\n                return ingredients[igKey];\r\n            } )\r\n            .reduce( ( sum, el ) => {\r\n                return sum + el;\r\n            }, 0 );\r\n        return sum > 0 \r\n    }\r\n\r\n\r\nmodalClosingHandler = () => {\r\n  this.setState({purchasing:false})\r\n}\r\n\r\ncontinueHandler = ()=>{\r\nthis.props.purchasing()\r\nthis.props.history.push('/checkout')\r\n}\r\n\r\nrender() {\r\n    const disabledInfo = {\r\n    ...this.props.ing\r\n};\r\n  for ( let key in disabledInfo ) {\r\n    disabledInfo[key] = disabledInfo[key] <= 0\r\n  }\r\n\r\n  let orderSummary = null\r\n\r\n  let burger = this.props.error ?<h1>500: Server Error</h1>:<Spinner />\r\n\r\n  if(this.props.ing){\r\n    burger =(<Fragment>\r\n\r\n            <Burger ingredients={this.props.ing} />\r\n\r\n            <BuildControls add_ing={this.props.OnaddIngredient} del_ing={this.props.OndelIngredient} price={this.props.totalPrice}\r\n            disabled={disabledInfo}\r\n            purchasable={this.updatePurchaseState(this.props.ing)}\r\n            ordered={this.purchaseHandler}\r\n\t\t\tisAuth={this.props.isAuthenticated}\r\n\r\n            />\r\n\r\n\t\t\t</Fragment>\r\n\t\t\t)\r\n\r\n    orderSummary = <OrderSummary ingredients={this.props.ing}\r\n                        cancel={this.modalClosingHandler}\r\n                        continue={this.continueHandler}\r\n                        price={this.props.totalPrice}/>\r\n  }\r\n\r\n    return (\r\n      <Fragment>\r\n\r\n      <Modal show={this.state.purchasing} modalclosed={this.modalClosingHandler}>\r\n      {orderSummary}\r\n      </Modal>\r\n      {burger}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n\r\n\treturn{\r\n\t\ting:state.burger.ingredients,\r\n\t\ttotalPrice:state.burger.totalPrice,\r\n\t\terror:state.burger.error,\r\n\t\tisAuthenticated:state.auth.token !== null\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n\treturn{\r\n\tOnaddIngredient:(type)=> dispatch(burgerAction.addIngredient(type)),\r\n\tOndelIngredient:(type)=> dispatch(burgerAction.delIngredient(type)),\r\n\tinit_Ingredients:()=> dispatch(burgerAction.init_Ingredients()),\r\n\tpurchasing : () =>dispatch(burgerAction.purchasing()),\r\n\tonSetAuthRedirect:(path)=>dispatch(burgerAction.authredirect(path))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios))\r\n","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-order'\r\n\r\nexport const addIngredient = (name) =>{\r\n\treturn {\r\n\t\ttype:actionTypes.ADD_INGREDIENTS,\r\n\t\tingredient_type:name\r\n\t}\r\n}\r\n\r\nexport const delIngredient = (name) =>{\r\n\treturn {\r\n\t\ttype:actionTypes.DEL_INGREDIENTS,\r\n\t\tingredient_type:name\r\n\t}\r\n}\r\n\r\nexport const setIngredients = (ingredients) =>{\r\n\treturn {\r\n\t\ttype:actionTypes.SET_INGREDIENTS,\r\n\t\tingredients:ingredients\r\n\t}\r\n}\r\n\r\nexport const fetchingredientsfailed = () =>{\r\n\treturn{\r\n\t\ttype:actionTypes.FETCH_INGREDIENTS_FAILED\r\n\t}\r\n}\r\n\r\nexport const init_Ingredients = () =>{\r\n\treturn dispatch =>{\r\n\t axios.get( '/ingredients.json' )\r\n            .then( response => {\r\n                dispatch( setIngredients(response.data) );\r\n            } )\r\n            .catch( error => {\r\n                dispatch(fetchingredientsfailed())\r\n            } );\r\n\t}\r\n}","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-order'\r\n\r\nexport const purchaseburgersuccess = (id,orderData) =>{\r\nreturn{\r\n\ttype:actionTypes.PURCHASE_BURGER_SUCCESS,\r\n\torderid:id,\r\n\torderdata:orderData\r\n}\r\n}\r\n\r\nexport const purchaseburgerfailure = (error) =>{\r\nreturn{\r\n\ttype:actionTypes.PURCHASE_BURGER_FAILURE,\r\n\terror:error\r\n}\r\n}\r\n\r\nexport const purchaseburgerstart = () =>{\r\n\treturn {\r\n\t\ttype:actionTypes.PURCHASE_BURGER_START\r\n\t}\r\n}\r\n\r\nexport const purchaseburgerinit = (orderData,token) =>{\r\n\treturn dispatch =>{\r\n\t  dispatch(purchaseburgerstart())\r\n\t  axios.post('/orders.json?auth='+token,orderData)\r\n      .then(response=>\r\n\t  {\r\n\t  dispatch(purchaseburgersuccess(response.data.name,orderData))\r\n\t  })\r\n\t  .catch(error=>\r\n\t  {\r\n\t  dispatch(purchaseburgerfailure(error))\r\n\t  })\r\n\t}\r\n}\r\n\r\nexport const purchasing = () =>{\r\n\treturn{\r\n\t\ttype:actionTypes.PURCHASING\r\n\t}\r\n}\r\n\r\nexport const ordersuccess = (orders) =>{\r\n\treturn{\r\n\t\ttype:actionTypes.ORDER_SUCCESS,\r\n\t\torders:orders\r\n\t}\r\n}\r\n\r\nexport const orderstart = () =>{\r\n\treturn{\r\n\t\ttype:actionTypes.ORDER_START\r\n\t}\r\n}\r\n\r\nexport const orderfailure = (error) =>{\r\n\treturn{\r\n\t\ttype:actionTypes.ORDER_FAILURE,\r\n\t\terror:error\r\n\t}\r\n}\r\n\r\nexport const orderinit = (token,userId) => {\r\n\treturn dispatch => {\r\n\t\t\tdispatch(orderstart())\r\n\t\t\tconst queryParams = '?auth='+token+'&orderBy=\"userId\"&equalTo=\"'+userId+'\"';\r\n\t\t    axios.get('/orders.json'+queryParams)\r\n\t\t\t.then(res=>{\r\n\t\t\tconst fetchOrder = []\r\n\t\t\tfor(let key in res.data)\r\n\t\t\t{\r\n\t\t\t  fetchOrder.push({...res.data[key],id:key})\r\n\t\t\t}\r\n\t\t\tdispatch(ordersuccess(fetchOrder))\r\n\t\t\t}).catch(error=>\r\n\t\t\t{\r\n\t\t    dispatch(orderfailure(error))\r\n\t\t\t})\r\n\t}\r\n}","import React from 'react'\r\nimport classes from './CheckoutSummary.module.css'\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\n\r\nconst checkoutSummary = (props) => {\r\n\r\n  return (\r\n    <div className={classes.CheckoutSummary}><h1>We hope it tastes well!</h1>\r\n    <div style={{width:'100%',margin:'auto' }}>\r\n    <Burger ingredients={props.ingredients} />\r\n    </div>\r\n    <Button btnType='Danger' clicked={props.cancel}>Cancel</Button>\r\n    <Button btnType='Success' clicked={props.continue}>Proceed</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default checkoutSummary\r\n","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n\r\n    switch ( props.elementType ) {\r\n        case ( 'input' ):\r\n            inputElement = <input\r\n                className={classes.InputElement}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'textarea' ):\r\n            inputElement = <textarea\r\n                className={classes.InputElement}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                    className={classes.InputElement}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={classes.InputElement}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;\r\n","  import React, { Component } from 'react'\r\n  import Button from '../../../components/UI/Button/Button'\r\n  import classes from './ContactDetail.module.css'\r\n  import axios from '../../../axios-order'\r\n  import Spinner from '../../../components/UI/Spinner/Spinner'\r\n  import Input from '../../../components/UI/Input/Input';\r\n  import {connect} from 'react-redux'\r\n  import withErrorHandler from '../../withErrorHandle/withErrorHandle'\r\n  import * as orderaction from '../../../store/actions'\r\n\r\n  class ContactDetail extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: ''\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: ''\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: ''\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: ''\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: ''\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: ''\r\n            }\r\n        },\r\n        loading: false\r\n    }\r\n\r\n    orderHandler=(e)=>{\r\n      e.preventDefault()\r\n\r\n      this.setState({loading:true})\r\n      const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n      const order ={\r\n        ingredients:this.props.ingredients,\r\n        price:this.props.totalPrice,\r\n        orderData: formData,\r\n\t\tuserId:this.props.userId\r\n      }\r\n\r\n\t  this.props.onOrderBurger(order,this.props.token)\r\n\t\t\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n            const updatedOrderForm = {\r\n                ...this.state.orderForm\r\n            };\r\n            const updatedFormElement = {\r\n                ...updatedOrderForm[inputIdentifier]\r\n            };\r\n            updatedFormElement.value = event.target.value;\r\n            updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n            this.setState({orderForm: updatedOrderForm});\r\n        }\r\n\r\n\r\n    render() {\r\nconst formElementsArray = [];\r\nfor (let key in this.state.orderForm) {\r\nformElementsArray.push({\r\nid: key,\r\nconfig: this.state.orderForm[key]\r\n});\r\n}\r\n\r\n      let form = (\r\n    <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n        ))}\r\n        <Button btnType=\"Success\">ORDER</Button>\r\n    </form>\r\n);\r\nif ( this.props.loading ) {\r\n    form = <Spinner />;\r\n}\r\n      return (\r\n        <div className={classes.ContactDetail}>\r\n          <h5>Enter Your Details</h5>\r\n          {form}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state =>{\r\n\r\n\treturn {\r\n\t\tingredients:state.burger.ingredients,\r\n\t\ttotalPrice:state.burger.totalPrice,\r\n\t\tloading:state.order.loading,\r\n\t\ttoken:state.auth.token,\r\n\t\tuserId:state.auth.userId\r\n\t\t\r\n\t}\r\n} \r\n  const mapDispatchtoProps = dispatch =>{\r\n  return{\r\n\tonOrderBurger:(orderData,token)=>{dispatch(orderaction.purchaseburgerinit(orderData,token))}\r\n  }}\r\n\r\n\r\n\r\n  export default connect(mapStateToProps,mapDispatchtoProps)(withErrorHandler(ContactDetail,axios))\r\n","import React, { Component } from 'react'\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\r\nimport ContactDetail from './ContactDetails/ContactDetail'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Checkout extends Component {\r\n\r\n\r\ncontinueHandler = () =>{\r\n  this.props.history.replace('/checkout/contact-details')\r\n}\r\n\r\ncancelHandler = () =>{\r\n  this.props.history.goBack()\r\n}\r\n\r\n  render() {\r\n  \r\n\r\n  let summary = <Redirect to='/' />\r\n  \r\n  if(this.props.ing){\r\n\t\tconst purchaseredirect = this.props.purchased ? <Redirect to='/' /> : null\r\n\t\tsummary = (\r\n\t\t<div>\r\n\t\t{purchaseredirect}\r\n\t\t<CheckoutSummary\r\n        ingredients={this.props.ing}\r\n        cancel={this.cancelHandler}\r\n        continue={this.continueHandler}/>\r\n        \r\n\t\t<Route path={this.props.match.path + '/contact-details'} component={ContactDetail} />\r\n        </div>)\r\n  }\r\n    return summary \r\n    \r\n  }\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n\r\n\treturn{\r\n\t\ting:state.burger.ingredients,\r\n\t\tpurchased:state.order.purchased\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout)\r\n\r\n\r\n","  import React, { Component } from 'react'\r\n  import Button from '../../components/UI/Button/Button'\r\n  import Spinner from '../../components/UI/Spinner/Spinner'\r\n  import classes from './Auth.module.css'\r\n  import axios from '../../axios-order'\r\n  import Input from '../../components/UI/Input/Input';\r\n  import withErrorHandler from '../withErrorHandle/withErrorHandle'\r\n  import { connect } from 'react-redux'\r\n  import * as authactions from '../../store/actions'\r\n  import { Redirect } from 'react-router-dom'\r\n\r\n  class ContactDetail extends Component {\r\n    state = {\r\n        control: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: ''\r\n            },\r\n\t\t\tpassword:{\r\n\t\t\telementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Your Password'\r\n                },\r\n                value: ''\t\t\t\r\n\t\t\t}\r\n        },\r\n\t\tisSignup:true\r\n    }\r\n\t\r\n\tcomponentDidMount(){\r\n\t if(!this.props.isbuilding && this.props.authredirect !== '/')\r\n\t\t{\t\r\n\t\t\tthis.props.OnSetAuthRedirect()\r\n\t\t}\r\n\t}\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n            const updatedControl = {\r\n                ...this.state.control\r\n            };\r\n            const updatedFormElement = {\r\n                ...updatedControl[inputIdentifier]\r\n            };\r\n            updatedFormElement.value = event.target.value;\r\n            updatedControl[inputIdentifier] = updatedFormElement;\r\n            this.setState({control: updatedControl});\r\n    }\r\n\r\n  signHandler = () =>{\r\n\tthis.setState(prevState =>{\r\n\treturn{isSignup:!prevState.isSignup}\r\n\t})\r\n  }\r\n\r\n\tonsubmitHandler = (event) =>{\r\n\t\tevent.preventDefault()\r\n\t\tthis.props.OnSubmit(this.state.control.email.value,this.state.control.password.value,this.state.isSignup)\r\n\t}\r\n\r\n    render() {\r\n\r\n\t  let authredirect = null\r\n\t  if(this.props.isAuthenticated)\r\n\t  {\t\r\n\t\tauthredirect = <Redirect to = { this.props.authredirect } />\r\n\t  }\r\n\r\n\t\tconst formElementsArray = [];\r\n\t\tfor (let key in this.state.control) {\r\n\t\t\tformElementsArray.push({\r\n\t\t\t\tid: key,\r\n\t\t\t\tconfig: this.state.control[key]\r\n\t\t\t});\r\n\t\t}\r\n\r\n      let form = formElementsArray.map(formElement => (\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\tkey={formElement.id}\r\n\t\t\t\t\telementType={formElement.config.elementType}\r\n\t\t\t\t\telementConfig={formElement.config.elementConfig}\r\n\t\t\t\t\tvalue={formElement.config.value}\r\n\t\t\t\t\tchanged={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n\t\t\t\t))\r\n\t  if(this.props.loading)\r\n\t  {\r\n\t  form = (<Spinner />)\r\n\t  }\r\n\r\n\t  \r\n      return (\r\n\t  \r\n        <div className={classes.Control}>\r\n\t\t{authredirect}\r\n          <h5>Enter Your Credentials</h5>\r\n\t\t  <form onSubmit={this.onsubmitHandler}>\r\n\t\t\t{form}\r\n\t\t\t<Button  btnType=\"Success\">Submit</Button>\r\n\t\t  </form>\r\n\t\t  <Button btnType=\"Danger\" clicked={this.signHandler}>Switch to {this.state.isSignup?'SIGNIN':'SIGNUP'}</Button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state =>{\r\n\treturn {\r\n\t\tloading:state.auth.loading,\r\n\t\tisAuthenticated: state.auth.token !== null,\r\n\t\tauthredirect:state.auth.authredirect,\r\n\t\tisbuilding:state.burger.isbuilding\r\n\t}\r\n  }\r\n\r\n\r\n  const mapDispatchToProps = dispatch =>{\r\n  \t  return{\r\n\t\tOnSubmit:(email,password,isSignup)=>dispatch(authactions.authinit(email,password,isSignup)),\r\n\t\tOnSetAuthRedirect:()=>dispatch(authactions.authredirect('/'))\r\n\t  }\r\n  }\r\n\r\n  export default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactDetail,axios))\r\n","import React from 'react'\r\nimport classes from './Order.module.css'\r\nconst order = (props)=> {\r\n  const ingredients =[]\r\n  for(let ingkey in props.ingredients)\r\n  {\r\n    ingredients.push({name:ingkey,quantity:props.ingredients[ingkey]})\r\n  }\r\n\r\n  const ingrediens_output= ingredients.map(ingredient =>(\r\n    <span key={ingredient.name} className={classes.Ingredients}>{ingredient.name} : {ingredient.quantity} </span>\r\n  ))\r\n\r\n  const orderdata =[]\r\n  for(let ingkey in props.orderData)\r\n  {\r\n    orderdata.push({name:ingkey,value:props.orderData[ingkey]})\r\n  }\r\n\r\n  const orders_output= orderdata.map(odata =>(\r\n    <span key={odata.name} className={classes.Ingredients}>{odata.name} : {odata.value} </span>\r\n  ))\r\n  return (\r\n    <div className={classes.Order}>\r\n    <p><strong>Ingredients</strong> <em>{ingrediens_output}</em> </p>\r\n    <p><strong>price</strong> <em>{parseFloat(props.price).toFixed(2)}</em></p>\r\n    <p><strong>Details</strong> <em>{orders_output}</em> </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default order\r\n","import React, { Component } from 'react'\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-order'\r\nimport withErrorHandler from '../withErrorHandle/withErrorHandle'\r\nimport { connect } from 'react-redux'\r\nimport * as orderaction from '../../store/actions'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n  state = {\r\n    orders:[],\r\n    loading:true\r\n  }\r\n\r\n  componentDidMount(){\r\n  this.props.OnfetchOrders(this.props.token,this.props.userId)\r\n\r\n  }\r\n  render() {\r\n  let orders = <Spinner />\r\n  if(!this.props.loading)\r\n  {\r\n  orders = this.props.orders.map(\r\n          order =><Order key={order.id} ingredients={order.ingredients} price={order.price} orderData={order.orderData}/>\r\n        )\r\n  }\r\n    return (\r\n      <div>\r\n        {orders}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n\treturn{\r\n\tOnfetchOrders:(token,userId) => dispatch(orderaction.orderinit(token,userId))\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n\treturn{\r\n\torders:state.order.orders,\r\n\tloading:state.order.loading,\r\n\ttoken:state.auth.token,\r\n\tuserId:state.auth.userId\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios))\r\n","import React , { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport * as authaction from '../../../store/actions'\r\n\r\nclass Logout extends Component {\r\n\r\ncomponentDidMount(){\r\nthis.props.Logout()\r\n}\r\n\r\nrender()\r\n\t{\r\n\t\treturn <Redirect to = '/' />\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatchh => {\r\n\treturn{\r\n\tLogout:()=>dispatchh(authaction.authlogout())\r\n\t}\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout)\r\n","import React,{Fragment,useEffect} from 'react';\nimport Layout from './containers/Layouts/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from './containers/Checkout/Checkout'\nimport Auth from './containers/Auth/Auth'\nimport Orders from './containers/Orders/Orders'\nimport { Route , Switch , withRouter , Redirect } from 'react-router-dom'\nimport Logout from './containers/Auth/Logout/Logout'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\n\n\nfunction App(props) {\n\tuseEffect(()=>{\n\tprops.AutoAuthValidate()\n\t})\n\n\tlet routes = (\n\t<Switch>\n\t\t<Route path='/auth' component={Auth} />\n\t    <Route path='/' exact component={BurgerBuilder} />\n\t\t<Redirect to='/' />\n\t</Switch>\r\n\t)\n\n\tif(props.isAuthenticated)\n\t{\n\troutes=(<Switch>\n\t\t<Route path='/checkout' component={Checkout} />\n\t\t<Route path='/orders' component={Orders} />\n\t\t<Route path='/auth' component={Auth} />\n\t\t<Route path='/logout' component={Logout} />\n\t    <Route path='/' exact component={BurgerBuilder} />\n\t\t<Redirect to='/' />\n\t</Switch>)\n\t}\n\n    return (\n<Fragment>\n  <Layout>\n\t{routes}\n  </Layout>\n</Fragment>\n)\n}\n\nconst mapStateToProps = state =>{\n\treturn{\n\t      isAuthenticated: state.auth.token !== null\r\n\t}\n}\n\nconst mapDispatchToProps = dispatch =>{\n\treturn{\n\t\tAutoAuthValidate:()=>dispatch(actions.checkauthstatus())\n\t}\t\t\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionType from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n\tingredients:null,\r\n\ttotalPrice:20,\r\n\terror:false,\r\n\tisbuilding:false\r\n}\r\n\r\nconst INGREDIENTS_PRICE ={\r\n  salad:17,\r\n  cheese:15,\r\n  meat:22,\r\n  bacon:18\r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n\r\nswitch(action.type)\r\n{\r\n\tcase actionType.ADD_INGREDIENTS:\r\n\treturn{\r\n\t...state,\r\n\tingredients:{\r\n\t\t...state.ingredients,\r\n\t\t[action.ingredient_type]:state.ingredients[action.ingredient_type]+1\r\n\t},\r\n\ttotalPrice:state.totalPrice + INGREDIENTS_PRICE[action.ingredient_type],\r\n\tisbuilding:true\r\n\t}\r\n\r\n\tcase actionType.DEL_INGREDIENTS:\r\n\treturn{\r\n\t...state,\r\n\tingredients:{\r\n\t\t...state.ingredients,\r\n\t\t[action.ingredient_type]:state.ingredients[action.ingredient_type]-1\r\n\t},\r\n\ttotalPrice:state.totalPrice - INGREDIENTS_PRICE[action.ingredient_type],\r\n\tisbuilding:true\r\n\t}\r\n\r\n\tcase actionType.SET_INGREDIENTS:\r\n\treturn{\r\n\t\t...state,\r\n\t\tingredients:action.ingredients,\r\n\t\terror:false,\r\n\t\ttotalPrice:20,\r\n\t\tisbuilding:false\r\n\t}\r\n\r\n\t\tcase actionType.FETCH_INGREDIENTS_FAILED:\r\n\treturn{\r\n\t\t...state,\r\n\t\terror:true\r\n\t}\r\n\r\n\tdefault:\r\n\treturn state\r\n}\r\n\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n\torders:[],\r\n\tloading:false,\r\n\tpurchased:false\r\n}\r\n\r\nconst reducer = (state=initialState,action)=>{\r\n\tswitch(action.type){\r\n\t\tcase actionTypes.ORDER_START:\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tloading:true\r\n\t\t}\r\n\t\tcase actionTypes.ORDER_SUCCESS:\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\torders:action.orders,\r\n\t\t\tloading:false\r\n\t\t}\r\n\t\tcase actionTypes.ORDER_FAILURE:\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tloading:false\r\n\t\t}\r\n\t\tcase actionTypes.PURCHASING:\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tpurchased:false\r\n\t\t}\r\n\t\tcase actionTypes.PURCHASE_BURGER_START:\r\n\t\treturn {\r\n\t\t...state,\r\n\t\tloading:true\r\n\t\t}\t\t\r\n\t\tcase actionTypes.PURCHASE_BURGER_SUCCESS:\r\n\t\tconst neworder = {\r\n\t\t...action.orderdata,\r\n\t\tid:action.orderid\r\n\t\t}\r\n\t\treturn {\r\n\t\t...state,\r\n\t\tloading:false,\r\n\t\torders:state.orders.concat(neworder),\r\n\t\tpurchased:true\r\n\t\t}\r\n\t\tcase actionTypes.PURCHASE_BURGER_FAILURE:\r\n\t\treturn {\r\n\t\t...state,\r\n\t\tloading:false\r\n\t\t}\r\n\t\tdefault:\r\n\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState ={\r\n\ttoken:null,\r\n\tuserId:null,\r\n\terror:null,\r\n\tloading:false,\r\n\tauthredirect:'/'\r\n}\r\n\r\nconst reducer = (state=initialState , action )=>{\r\n\tswitch(action.type)\r\n\t{\t\r\n\t    case actionTypes.AUTH_REDIRECT_PATH:\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tauthredirect:action.path\r\n\t\t}\r\n\t\tcase actionTypes.AUTH_LOGOUT:\r\n\t\treturn{\r\n\t\t...state,\r\n\t\ttoken:null,\r\n\t\tuserId:null\r\n\t\t}\r\n\t\tcase actionTypes.AUTH_START:\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\terror:null,\r\n\t\t\tloading:true\r\n\t\t}\r\n\t\tcase actionTypes.AUTH_SUCCESS:\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\ttoken:action.token,\r\n\t\t\tuserId:action.userId,\r\n\t\t\terror:null,\r\n\t\t\tloading:false\r\n\t\t}\r\n\t\tcase actionTypes.AUTH_FAILURE:\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\terror:action.error,\r\n\t\t\tloading:false\r\n\t\t}\r\n\t\tdefault:\r\n\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default reducer","import { combineReducers } from 'redux'\r\nimport burgerReducer from './burger'\r\nimport orderReducer from './order'\r\nimport authReducer from './auth'\r\n\r\nconst rootReducer = combineReducers({\r\n\tburger: burgerReducer,\r\n\torder: orderReducer,\r\n\tauth: authReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {createStore , applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootreducer'\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose\n\nconst store = createStore(\nrootReducer,\ncomposeEnhancers(\napplyMiddleware(thunk))\n)\n\nconst app =(\n<Provider store={store}>\n\t<BrowserRouter>\n\t  <React.StrictMode>\n\t   <App />\n\t  </React.StrictMode>\n\t</BrowserRouter>\n</Provider>\n)\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}